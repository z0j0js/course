2020-11-29 10:45:53.420 INFO  o.s.b.d.env.DevToolsPropertyDefaultsPostProcessor :225  [32m        [0;39m Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-11-29 10:45:53.713 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-29 10:45:55.919 INFO  com.sise.business.BusinessApplication             :651  [32m        [0;39m No active profile set, falling back to default profiles: default
2020-11-29 10:45:57.332 INFO  o.springframework.cloud.context.scope.GenericScope:295  [32m        [0;39m BeanFactory id=afcb0c09-8328-371a-964c-709459dc2d35
2020-11-29 10:45:57.472 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-29 10:45:57.504 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330  [32m        [0;39m Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-29 10:45:58.007 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :92   [32m        [0;39m Tomcat initialized with port(s): 9002 (http)
2020-11-29 10:45:58.022 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Initializing ProtocolHandler ["http-nio-9002"]
2020-11-29 10:45:58.022 INFO  org.apache.catalina.core.StandardService          :173  [32m        [0;39m Starting service [Tomcat]
2020-11-29 10:45:58.022 INFO  org.apache.catalina.core.StandardEngine           :173  [32m        [0;39m Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-11-29 10:45:58.180 INFO  o.a.c.c.C.[Tomcat].[localhost].[/business]        :173  [32m        [0;39m Initializing Spring embedded WebApplicationContext
2020-11-29 10:45:58.181 INFO  org.springframework.web.context.ContextLoader     :284  [32m        [0;39m Root WebApplicationContext: initialization completed in 2233 ms
2020-11-29 10:45:58.935 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-11-29 10:45:58.936 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-29 10:45:58.941 WARN  com.netflix.config.sources.URLConfigurationSource :121  [32m        [0;39m No URLs will be polled as dynamic configuration sources.
2020-11-29 10:45:58.942 INFO  com.netflix.config.sources.URLConfigurationSource :122  [32m        [0;39m To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-29 10:45:59.197 INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor  :171  [32m        [0;39m Initializing ExecutorService 'applicationTaskExecutor'
2020-11-29 10:45:59.584 WARN  o.s.b.d.autoconfigure.OptionalLiveReloadServer    :61   [32m        [0;39m Unable to start LiveReload server
2020-11-29 10:46:01.187 INFO  org.springframework.cloud.commons.util.InetUtils  :170  [32m        [0;39m Cannot determine local hostname
2020-11-29 10:46:02.846 INFO  org.springframework.cloud.commons.util.InetUtils  :170  [32m        [0;39m Cannot determine local hostname
2020-11-29 10:46:04.562 INFO  org.springframework.cloud.commons.util.InetUtils  :170  [32m        [0;39m Cannot determine local hostname
2020-11-29 10:46:04.601 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:106  [32m        [0;39m You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-11-29 10:46:04.651 WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger:81   [32m        [0;39m Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
2020-11-29 10:46:04.755 INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory      :72   [32m        [0;39m Setting initial instance status as: STARTING
2020-11-29 10:46:04.803 INFO  com.netflix.discovery.DiscoveryClient             :365  [32m        [0;39m Initializing Eureka in region us-east-1
2020-11-29 10:46:05.373 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :70   [32m        [0;39m Using JSON encoding codec LegacyJacksonJson
2020-11-29 10:46:05.373 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :71   [32m        [0;39m Using JSON decoding codec LegacyJacksonJson
2020-11-29 10:46:05.549 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :80   [32m        [0;39m Using XML encoding codec XStreamXml
2020-11-29 10:46:05.549 INFO  c.n.discovery.provider.DiscoveryJerseyProvider    :81   [32m        [0;39m Using XML decoding codec XStreamXml
2020-11-29 10:46:05.897 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-11-29 10:46:06.749 INFO  com.netflix.discovery.DiscoveryClient             :976  [32m        [0;39m Disable delta property : false
2020-11-29 10:46:06.753 INFO  com.netflix.discovery.DiscoveryClient             :977  [32m        [0;39m Single vip registry refresh property : null
2020-11-29 10:46:06.753 INFO  com.netflix.discovery.DiscoveryClient             :978  [32m        [0;39m Force full registry fetch : false
2020-11-29 10:46:06.754 INFO  com.netflix.discovery.DiscoveryClient             :979  [32m        [0;39m Application is null : false
2020-11-29 10:46:06.754 INFO  com.netflix.discovery.DiscoveryClient             :980  [32m        [0;39m Registered Applications size is zero : true
2020-11-29 10:46:06.754 INFO  com.netflix.discovery.DiscoveryClient             :982  [32m        [0;39m Application version is -1: true
2020-11-29 10:46:06.754 INFO  com.netflix.discovery.DiscoveryClient             :1065 [32m        [0;39m Getting all instance registry info from the eureka server
2020-11-29 10:46:07.115 INFO  com.netflix.discovery.DiscoveryClient             :1074 [32m        [0;39m The response status is 200
2020-11-29 10:46:07.119 INFO  com.netflix.discovery.DiscoveryClient             :1288 [32m        [0;39m Starting heartbeat executor: renew interval is: 30
2020-11-29 10:46:07.122 INFO  com.netflix.discovery.InstanceInfoReplicator      :60   [32m        [0;39m InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-11-29 10:46:07.133 INFO  com.netflix.discovery.DiscoveryClient             :465  [32m        [0;39m Discovery Client initialized at timestamp 1606617967132 with initial instances count: 1
2020-11-29 10:46:07.136 INFO  o.s.c.n.e.serviceregistry.EurekaServiceRegistry   :41   [32m        [0;39m Registering application BUSINESS with eureka with status UP
2020-11-29 10:46:07.137 INFO  com.netflix.discovery.DiscoveryClient             :1323 [32m        [0;39m Saw local status change event StatusChangeEvent [timestamp=1606617967137, current=UP, previous=STARTING]
2020-11-29 10:46:07.142 INFO  com.netflix.discovery.DiscoveryClient             :844  [32m        [0;39m DiscoveryClient_BUSINESS/localhost:business:9002: registering service...
2020-11-29 10:46:07.167 INFO  org.apache.coyote.http11.Http11NioProtocol        :173  [32m        [0;39m Starting ProtocolHandler ["http-nio-9002"]
2020-11-29 10:46:07.220 INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer      :204  [32m        [0;39m Tomcat started on port(s): 9002 (http) with context path '/business'
2020-11-29 10:46:07.222 INFO  com.netflix.discovery.DiscoveryClient             :853  [32m        [0;39m DiscoveryClient_BUSINESS/localhost:business:9002 - registration status: 204
2020-11-29 10:46:07.222 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration         :145  [32m        [0;39m Updating port to 9002
2020-11-29 10:46:08.931 INFO  org.springframework.cloud.commons.util.InetUtils  :170  [32m        [0;39m Cannot determine local hostname
2020-11-29 10:46:08.934 INFO  com.sise.business.BusinessApplication             :61   [32m        [0;39m Started BusinessApplication in 18.888 seconds (JVM running for 21.807)
2020-11-29 10:46:08.937 INFO  com.sise.business.BusinessApplication             :27   [32m        [0;39m ÂêØÂä®ÊàêÂäüÔºÅÔºÅ
2020-11-29 10:46:08.938 INFO  com.sise.business.BusinessApplication             :28   [32m        [0;39m BusinessÂú∞ÂùÄ: 	http://127.0.0.1:9002
2020-11-29 10:47:58.702 INFO  o.a.c.c.C.[Tomcat].[localhost].[/business]        :173  [32m        [0;39m Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-29 10:47:58.703 INFO  org.springframework.web.servlet.DispatcherServlet :525  [32m        [0;39m Initializing Servlet 'dispatcherServlet'
2020-11-29 10:47:58.712 INFO  org.springframework.web.servlet.DispatcherServlet :547  [32m        [0;39m Completed initialization in 9 ms
2020-11-29 10:47:58.939 INFO  com.zaxxer.hikari.HikariDataSource                :110  [32m        [0;39m HikariPool-1 - Starting...
2020-11-29 10:47:59.437 INFO  com.zaxxer.hikari.HikariDataSource                :123  [32m        [0;39m HikariPool-1 - Start completed.
2020-11-29 10:47:59.448 DEBUG c.s.server.mapper.CategoryMapper.selectByExample  :159  [32m        [0;39m ==>  Preparing: select id, parent, `name`, sort from category order by sort asc 
2020-11-29 10:47:59.474 DEBUG c.s.server.mapper.CategoryMapper.selectByExample  :159  [32m        [0;39m ==> Parameters: 
2020-11-29 10:47:59.558 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==    Columns: id, parent, name, sort
2020-11-29 10:47:59.559 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000100, 00000000, ÂâçÁ´ØÊäÄÊúØ, 100
2020-11-29 10:47:59.562 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-11-29 10:47:59.562 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-11-29 10:47:59.563 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-11-29 10:47:59.564 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-11-29 10:47:59.564 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000105, 00000100, angular, 105
2020-11-29 10:47:59.565 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-11-29 10:47:59.566 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-11-29 10:47:59.567 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000108, 00000100, Â∞èÁ®ãÂ∫è, 108
2020-11-29 10:47:59.568 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000200, 00000000, ÂêéÁ´ØÊäÄÊúØ, 200
2020-11-29 10:47:59.570 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000201, 00000200, java, 201
2020-11-29 10:47:59.572 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-11-29 10:47:59.572 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-11-29 10:47:59.573 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-11-29 10:47:59.574 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000205, 00000200, python, 205
2020-11-29 10:47:59.575 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000206, 00000200, Áà¨Ëô´, 206
2020-11-29 10:47:59.578 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000300, 00000000, ÁßªÂä®ÂºÄÂèë, 300
2020-11-29 10:47:59.579 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000301, 00000300, android, 301
2020-11-29 10:47:59.580 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000302, 00000300, ios, 302
2020-11-29 10:47:59.580 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000303, 00000300, react native, 303
2020-11-29 10:47:59.581 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-11-29 10:47:59.581 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000400, 00000000, ÂâçÊ≤øÊäÄÊúØ, 400
2020-11-29 10:47:59.582 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000401, 00000400, ÂæÆÊúçÂä°, 401
2020-11-29 10:47:59.582 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000402, 00000400, Âå∫ÂùóÈìæ, 402
2020-11-29 10:47:59.583 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000403, 00000400, Êú∫Âô®Â≠¶‰π†, 403
2020-11-29 10:47:59.585 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000404, 00000400, Ê∑±Â∫¶Â≠¶‰π†, 404
2020-11-29 10:47:59.588 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000405, 00000400, Êï∞ÊçÆÂàÜÊûê&ÊåñÊéò, 405
2020-11-29 10:47:59.589 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000500, 00000000, ‰∫ëËÆ°ÁÆó&Â§ßÊï∞ÊçÆ, 500
2020-11-29 10:47:59.590 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000501, 00000500, Â§ßÊï∞ÊçÆ, 501
2020-11-29 10:47:59.591 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-11-29 10:47:59.592 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000503, 00000500, spark, 503
2020-11-29 10:47:59.592 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-11-29 10:47:59.593 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000505, 00000500, ÈòøÈáå‰∫ë, 505
2020-11-29 10:47:59.593 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000506, 00000500, docker, 506
2020-11-29 10:47:59.593 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-11-29 10:47:59.594 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000600, 00000000, ËøêÁª¥&ÊµãËØï, 600
2020-11-29 10:47:59.594 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000601, 00000600, ËøêÁª¥, 601
2020-11-29 10:47:59.594 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000602, 00000600, Ëá™Âä®ÂåñËøêÁª¥, 602
2020-11-29 10:47:59.595 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000603, 00000600, ‰∏≠Èó¥‰ª∂, 603
2020-11-29 10:47:59.595 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000604, 00000600, linux, 604
2020-11-29 10:47:59.595 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000605, 00000600, ÊµãËØï, 605
2020-11-29 10:47:59.596 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000606, 00000600, Ëá™Âä®ÂåñÊµãËØï, 606
2020-11-29 10:47:59.596 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000700, 00000000, Êï∞ÊçÆÂ∫ì, 700
2020-11-29 10:47:59.596 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-11-29 10:47:59.596 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000702, 00000700, redis, 702
2020-11-29 10:47:59.597 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-11-29 10:47:59.597 DEBUG c.s.server.mapper.CategoryMapper.selectByExample  :159  [32m        [0;39m <==      Total: 46
2020-11-29 10:48:04.342 DEBUG c.s.server.mapper.CategoryMapper.selectByExample  :159  [32m        [0;39m ==>  Preparing: select id, parent, `name`, sort from category order by sort asc 
2020-11-29 10:48:04.343 DEBUG c.s.server.mapper.CategoryMapper.selectByExample  :159  [32m        [0;39m ==> Parameters: 
2020-11-29 10:48:04.344 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==    Columns: id, parent, name, sort
2020-11-29 10:48:04.344 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000100, 00000000, ÂâçÁ´ØÊäÄÊúØ, 100
2020-11-29 10:48:04.345 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000101, 00000100, html/css, 101
2020-11-29 10:48:04.345 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000102, 00000100, javascript, 102
2020-11-29 10:48:04.346 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000103, 00000100, vue.js, 103
2020-11-29 10:48:04.346 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000104, 00000100, react.js, 104
2020-11-29 10:48:04.346 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000105, 00000100, angular, 105
2020-11-29 10:48:04.347 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000106, 00000100, node.js, 106
2020-11-29 10:48:04.347 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000107, 00000100, jquery, 107
2020-11-29 10:48:04.347 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000108, 00000100, Â∞èÁ®ãÂ∫è, 108
2020-11-29 10:48:04.348 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000200, 00000000, ÂêéÁ´ØÊäÄÊúØ, 200
2020-11-29 10:48:04.348 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000201, 00000200, java, 201
2020-11-29 10:48:04.349 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000202, 00000200, springboot, 202
2020-11-29 10:48:04.349 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000203, 00000200, spring cloud, 203
2020-11-29 10:48:04.349 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000204, 00000200, ssm, 204
2020-11-29 10:48:04.349 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000205, 00000200, python, 205
2020-11-29 10:48:04.350 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000206, 00000200, Áà¨Ëô´, 206
2020-11-29 10:48:04.351 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000300, 00000000, ÁßªÂä®ÂºÄÂèë, 300
2020-11-29 10:48:04.352 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000301, 00000300, android, 301
2020-11-29 10:48:04.353 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000302, 00000300, ios, 302
2020-11-29 10:48:04.353 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000303, 00000300, react native, 303
2020-11-29 10:48:04.354 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000304, 00000300, ionic, 304
2020-11-29 10:48:04.354 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000400, 00000000, ÂâçÊ≤øÊäÄÊúØ, 400
2020-11-29 10:48:04.354 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000401, 00000400, ÂæÆÊúçÂä°, 401
2020-11-29 10:48:04.355 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000402, 00000400, Âå∫ÂùóÈìæ, 402
2020-11-29 10:48:04.355 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000403, 00000400, Êú∫Âô®Â≠¶‰π†, 403
2020-11-29 10:48:04.355 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000404, 00000400, Ê∑±Â∫¶Â≠¶‰π†, 404
2020-11-29 10:48:04.355 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000405, 00000400, Êï∞ÊçÆÂàÜÊûê&ÊåñÊéò, 405
2020-11-29 10:48:04.356 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000500, 00000000, ‰∫ëËÆ°ÁÆó&Â§ßÊï∞ÊçÆ, 500
2020-11-29 10:48:04.356 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000501, 00000500, Â§ßÊï∞ÊçÆ, 501
2020-11-29 10:48:04.357 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000502, 00000500, hadoop, 502
2020-11-29 10:48:04.357 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000503, 00000500, spark, 503
2020-11-29 10:48:04.358 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000504, 00000500, hbase, 504
2020-11-29 10:48:04.359 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000505, 00000500, ÈòøÈáå‰∫ë, 505
2020-11-29 10:48:04.359 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000506, 00000500, docker, 506
2020-11-29 10:48:04.360 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000507, 00000500, kubernetes, 507
2020-11-29 10:48:04.360 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000600, 00000000, ËøêÁª¥&ÊµãËØï, 600
2020-11-29 10:48:04.361 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000601, 00000600, ËøêÁª¥, 601
2020-11-29 10:48:04.361 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000602, 00000600, Ëá™Âä®ÂåñËøêÁª¥, 602
2020-11-29 10:48:04.361 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000603, 00000600, ‰∏≠Èó¥‰ª∂, 603
2020-11-29 10:48:04.362 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000604, 00000600, linux, 604
2020-11-29 10:48:04.362 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000605, 00000600, ÊµãËØï, 605
2020-11-29 10:48:04.362 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000606, 00000600, Ëá™Âä®ÂåñÊµãËØï, 606
2020-11-29 10:48:04.362 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000700, 00000000, Êï∞ÊçÆÂ∫ì, 700
2020-11-29 10:48:04.363 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000701, 00000700, mysql, 701
2020-11-29 10:48:04.363 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000702, 00000700, redis, 702
2020-11-29 10:48:04.363 TRACE c.s.server.mapper.CategoryMapper.selectByExample  :165  [32m        [0;39m <==        Row: 00000703, 00000700, mongodb, 703
2020-11-29 10:48:04.363 DEBUG c.s.server.mapper.CategoryMapper.selectByExample  :159  [32m        [0;39m <==      Total: 46
2020-11-29 10:48:04.541 DEBUG c.s.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32m        [0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-11-29 10:48:04.546 DEBUG c.s.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32m        [0;39m ==> Parameters: 
2020-11-29 10:48:04.588 TRACE c.s.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32m        [0;39m <==    Columns: count(0)
2020-11-29 10:48:04.588 TRACE c.s.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32m        [0;39m <==        Row: 2
2020-11-29 10:48:04.590 DEBUG c.s.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32m        [0;39m <==      Total: 1
2020-11-29 10:48:04.593 DEBUG c.sise.server.mapper.CourseMapper.selectByExample :159  [32m        [0;39m ==>  Preparing: select id, `name`, summary, `time`, price, image, `level`, charge, `status`, enroll, sort, created_at, updated_at, teacher_id from course order by sort asc LIMIT ? 
2020-11-29 10:48:04.594 DEBUG c.sise.server.mapper.CourseMapper.selectByExample :159  [32m        [0;39m ==> Parameters: 5(Integer)
2020-11-29 10:48:04.595 TRACE c.sise.server.mapper.CourseMapper.selectByExample :165  [32m        [0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at, teacher_id
2020-11-29 10:48:04.596 TRACE c.sise.server.mapper.CourseMapper.selectByExample :165  [32m        [0;39m <==        Row: 00000000, ÊµãËØïËØæÁ®ã01, ËøôÊòØ‰∏ÄÈó®ÊµãËØïËØæÁ®ã, 1500, 19.90, , 1, C, P, 100, 0, 2020-11-15 17:55:05.0, 2020-11-15 17:55:05.0, null
2020-11-29 10:48:04.597 TRACE c.sise.server.mapper.CourseMapper.selectByExample :165  [32m        [0;39m <==        Row: 00000001, ÊµãËØïËØæÁ®ã02, ËøôÊòØ‰∏ÄÈó®ÊµãËØïËØæÁ®ã, 10000, 0.00, null, 1, C, D, 0, 0, 2020-11-24 21:56:16.0, 2020-11-24 22:27:22.651, null
2020-11-29 10:48:04.598 DEBUG c.sise.server.mapper.CourseMapper.selectByExample :159  [32m        [0;39m <==      Total: 2
2020-11-29 10:48:18.396 DEBUG c.s.s.mapper.CourseCategoryMapper.selectByExample :159  [32m        [0;39m ==>  Preparing: select id, course_id, category_id from course_category WHERE ( course_id = ? ) 
2020-11-29 10:48:18.398 DEBUG c.s.s.mapper.CourseCategoryMapper.selectByExample :159  [32m        [0;39m ==> Parameters: 00000000(String)
2020-11-29 10:48:18.425 DEBUG c.s.s.mapper.CourseCategoryMapper.selectByExample :159  [32m        [0;39m <==      Total: 0
2020-11-29 10:48:29.573 DEBUG c.s.server.mapper.CourseMapper.updateByPrimaryKey :159  [32m        [0;39m ==>  Preparing: update course set `name` = ?, summary = ?, `time` = ?, price = ?, image = ?, `level` = ?, charge = ?, `status` = ?, enroll = ?, sort = ?, created_at = ?, updated_at = ?, teacher_id = ? where id = ? 
2020-11-29 10:48:29.576 DEBUG c.s.server.mapper.CourseMapper.updateByPrimaryKey :159  [32m        [0;39m ==> Parameters: ÊµãËØïËØæÁ®ã01(String), ËøôÊòØ‰∏ÄÈó®ÊµãËØïËØæÁ®ã(String), 1500(Integer), 19.9(BigDecimal), (String), 1(String), C(String), P(String), 100(Integer), 0(Integer), 2020-11-15 17:55:05.0(Timestamp), 2020-11-29 10:48:29.559(Timestamp), null, 00000000(String)
2020-11-29 10:48:29.669 DEBUG c.s.server.mapper.CourseMapper.updateByPrimaryKey :159  [32m        [0;39m <==    Updates: 1
2020-11-29 10:48:29.671 DEBUG c.s.s.mapper.CourseCategoryMapper.deleteByExample :159  [32m        [0;39m ==>  Preparing: delete from course_category WHERE ( course_id = ? ) 
2020-11-29 10:48:29.672 DEBUG c.s.s.mapper.CourseCategoryMapper.deleteByExample :159  [32m        [0;39m ==> Parameters: 00000000(String)
2020-11-29 10:48:29.677 DEBUG c.s.s.mapper.CourseCategoryMapper.deleteByExample :159  [32m        [0;39m <==    Updates: 0
2020-11-29 10:48:29.690 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==>  Preparing: insert into course_category (id, course_id, category_id ) values (?, ?, ? ) 
2020-11-29 10:48:29.691 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==> Parameters: W9V9xs35(String), 00000000(String), 00000100(String)
2020-11-29 10:48:29.703 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m <==    Updates: 1
2020-11-29 10:48:29.705 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==>  Preparing: insert into course_category (id, course_id, category_id ) values (?, ?, ? ) 
2020-11-29 10:48:29.706 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==> Parameters: nE5GP4hY(String), 00000000(String), 00000101(String)
2020-11-29 10:48:29.708 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m <==    Updates: 1
2020-11-29 10:48:29.709 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==>  Preparing: insert into course_category (id, course_id, category_id ) values (?, ?, ? ) 
2020-11-29 10:48:29.710 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==> Parameters: gHTAFQtW(String), 00000000(String), 00000102(String)
2020-11-29 10:48:29.723 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m <==    Updates: 1
2020-11-29 10:48:29.725 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==>  Preparing: insert into course_category (id, course_id, category_id ) values (?, ?, ? ) 
2020-11-29 10:48:29.726 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==> Parameters: xFLivFtC(String), 00000000(String), 00000103(String)
2020-11-29 10:48:29.729 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m <==    Updates: 1
2020-11-29 10:48:29.730 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==>  Preparing: insert into course_category (id, course_id, category_id ) values (?, ?, ? ) 
2020-11-29 10:48:29.731 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==> Parameters: bUFSmIvY(String), 00000000(String), 00000104(String)
2020-11-29 10:48:29.732 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m <==    Updates: 1
2020-11-29 10:48:29.733 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==>  Preparing: insert into course_category (id, course_id, category_id ) values (?, ?, ? ) 
2020-11-29 10:48:29.734 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==> Parameters: QC7NO4M4(String), 00000000(String), 00000105(String)
2020-11-29 10:48:29.735 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m <==    Updates: 1
2020-11-29 10:48:29.736 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==>  Preparing: insert into course_category (id, course_id, category_id ) values (?, ?, ? ) 
2020-11-29 10:48:29.737 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==> Parameters: gpsA8LyD(String), 00000000(String), 00000106(String)
2020-11-29 10:48:29.738 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m <==    Updates: 1
2020-11-29 10:48:29.739 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==>  Preparing: insert into course_category (id, course_id, category_id ) values (?, ?, ? ) 
2020-11-29 10:48:29.740 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==> Parameters: c0aWR5vP(String), 00000000(String), 00000107(String)
2020-11-29 10:48:29.742 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m <==    Updates: 1
2020-11-29 10:48:29.743 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==>  Preparing: insert into course_category (id, course_id, category_id ) values (?, ?, ? ) 
2020-11-29 10:48:29.744 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==> Parameters: gRNI9nbz(String), 00000000(String), 00000108(String)
2020-11-29 10:48:29.750 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m <==    Updates: 1
2020-11-29 10:48:29.965 DEBUG c.s.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32m        [0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-11-29 10:48:29.966 DEBUG c.s.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32m        [0;39m ==> Parameters: 
2020-11-29 10:48:29.967 TRACE c.s.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32m        [0;39m <==    Columns: count(0)
2020-11-29 10:48:29.967 TRACE c.s.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32m        [0;39m <==        Row: 2
2020-11-29 10:48:29.967 DEBUG c.s.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32m        [0;39m <==      Total: 1
2020-11-29 10:48:29.968 DEBUG c.sise.server.mapper.CourseMapper.selectByExample :159  [32m        [0;39m ==>  Preparing: select id, `name`, summary, `time`, price, image, `level`, charge, `status`, enroll, sort, created_at, updated_at, teacher_id from course order by sort asc LIMIT ? 
2020-11-29 10:48:29.969 DEBUG c.sise.server.mapper.CourseMapper.selectByExample :159  [32m        [0;39m ==> Parameters: 5(Integer)
2020-11-29 10:48:29.970 TRACE c.sise.server.mapper.CourseMapper.selectByExample :165  [32m        [0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at, teacher_id
2020-11-29 10:48:29.970 TRACE c.sise.server.mapper.CourseMapper.selectByExample :165  [32m        [0;39m <==        Row: 00000000, ÊµãËØïËØæÁ®ã01, ËøôÊòØ‰∏ÄÈó®ÊµãËØïËØæÁ®ã, 1500, 19.90, , 1, C, P, 100, 0, 2020-11-15 17:55:05.0, 2020-11-29 10:48:29.559, null
2020-11-29 10:48:29.971 TRACE c.sise.server.mapper.CourseMapper.selectByExample :165  [32m        [0;39m <==        Row: 00000001, ÊµãËØïËØæÁ®ã02, ËøôÊòØ‰∏ÄÈó®ÊµãËØïËØæÁ®ã, 10000, 0.00, null, 1, C, D, 0, 0, 2020-11-24 21:56:16.0, 2020-11-24 22:27:22.651, null
2020-11-29 10:48:29.972 DEBUG c.sise.server.mapper.CourseMapper.selectByExample :159  [32m        [0;39m <==      Total: 2
2020-11-29 10:48:33.401 DEBUG c.s.s.mapper.CourseCategoryMapper.selectByExample :159  [32m        [0;39m ==>  Preparing: select id, course_id, category_id from course_category WHERE ( course_id = ? ) 
2020-11-29 10:48:33.402 DEBUG c.s.s.mapper.CourseCategoryMapper.selectByExample :159  [32m        [0;39m ==> Parameters: 00000001(String)
2020-11-29 10:48:33.403 DEBUG c.s.s.mapper.CourseCategoryMapper.selectByExample :159  [32m        [0;39m <==      Total: 0
2020-11-29 10:48:38.629 DEBUG c.s.server.mapper.CourseMapper.updateByPrimaryKey :159  [32m        [0;39m ==>  Preparing: update course set `name` = ?, summary = ?, `time` = ?, price = ?, image = ?, `level` = ?, charge = ?, `status` = ?, enroll = ?, sort = ?, created_at = ?, updated_at = ?, teacher_id = ? where id = ? 
2020-11-29 10:48:38.630 DEBUG c.s.server.mapper.CourseMapper.updateByPrimaryKey :159  [32m        [0;39m ==> Parameters: ÊµãËØïËØæÁ®ã02(String), ËøôÊòØ‰∏ÄÈó®ÊµãËØïËØæÁ®ã(String), 10000(Integer), 0(BigDecimal), null, 1(String), C(String), D(String), 0(Integer), 0(Integer), 2020-11-24 21:56:16.0(Timestamp), 2020-11-29 10:48:38.629(Timestamp), null, 00000001(String)
2020-11-29 10:48:38.635 DEBUG c.s.server.mapper.CourseMapper.updateByPrimaryKey :159  [32m        [0;39m <==    Updates: 1
2020-11-29 10:48:38.636 DEBUG c.s.s.mapper.CourseCategoryMapper.deleteByExample :159  [32m        [0;39m ==>  Preparing: delete from course_category WHERE ( course_id = ? ) 
2020-11-29 10:48:38.637 DEBUG c.s.s.mapper.CourseCategoryMapper.deleteByExample :159  [32m        [0;39m ==> Parameters: 00000001(String)
2020-11-29 10:48:38.639 DEBUG c.s.s.mapper.CourseCategoryMapper.deleteByExample :159  [32m        [0;39m <==    Updates: 0
2020-11-29 10:48:38.639 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==>  Preparing: insert into course_category (id, course_id, category_id ) values (?, ?, ? ) 
2020-11-29 10:48:38.640 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==> Parameters: t3SIdGb9(String), 00000001(String), 00000200(String)
2020-11-29 10:48:38.641 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m <==    Updates: 1
2020-11-29 10:48:38.642 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==>  Preparing: insert into course_category (id, course_id, category_id ) values (?, ?, ? ) 
2020-11-29 10:48:38.643 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==> Parameters: 7YluPVBM(String), 00000001(String), 00000201(String)
2020-11-29 10:48:38.644 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m <==    Updates: 1
2020-11-29 10:48:38.648 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==>  Preparing: insert into course_category (id, course_id, category_id ) values (?, ?, ? ) 
2020-11-29 10:48:38.651 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==> Parameters: QuhqXlDq(String), 00000001(String), 00000202(String)
2020-11-29 10:48:38.653 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m <==    Updates: 1
2020-11-29 10:48:38.653 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==>  Preparing: insert into course_category (id, course_id, category_id ) values (?, ?, ? ) 
2020-11-29 10:48:38.654 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==> Parameters: HO7ldS5o(String), 00000001(String), 00000203(String)
2020-11-29 10:48:38.655 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m <==    Updates: 1
2020-11-29 10:48:38.656 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==>  Preparing: insert into course_category (id, course_id, category_id ) values (?, ?, ? ) 
2020-11-29 10:48:38.657 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==> Parameters: 6GHIMZeW(String), 00000001(String), 00000204(String)
2020-11-29 10:48:38.658 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m <==    Updates: 1
2020-11-29 10:48:38.658 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==>  Preparing: insert into course_category (id, course_id, category_id ) values (?, ?, ? ) 
2020-11-29 10:48:38.659 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==> Parameters: BtFnepkL(String), 00000001(String), 00000205(String)
2020-11-29 10:48:38.661 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m <==    Updates: 1
2020-11-29 10:48:38.663 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==>  Preparing: insert into course_category (id, course_id, category_id ) values (?, ?, ? ) 
2020-11-29 10:48:38.669 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m ==> Parameters: RApAipZb(String), 00000001(String), 00000206(String)
2020-11-29 10:48:38.672 DEBUG com.sise.server.mapper.CourseCategoryMapper.insert:159  [32m        [0;39m <==    Updates: 1
2020-11-29 10:48:38.868 DEBUG c.s.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32m        [0;39m ==>  Preparing: SELECT count(0) FROM course 
2020-11-29 10:48:38.868 DEBUG c.s.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32m        [0;39m ==> Parameters: 
2020-11-29 10:48:38.869 TRACE c.s.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32m        [0;39m <==    Columns: count(0)
2020-11-29 10:48:38.869 TRACE c.s.s.mapper.CourseMapper.selectByExample_COUNT   :165  [32m        [0;39m <==        Row: 2
2020-11-29 10:48:38.870 DEBUG c.s.s.mapper.CourseMapper.selectByExample_COUNT   :159  [32m        [0;39m <==      Total: 1
2020-11-29 10:48:38.870 DEBUG c.sise.server.mapper.CourseMapper.selectByExample :159  [32m        [0;39m ==>  Preparing: select id, `name`, summary, `time`, price, image, `level`, charge, `status`, enroll, sort, created_at, updated_at, teacher_id from course order by sort asc LIMIT ? 
2020-11-29 10:48:38.871 DEBUG c.sise.server.mapper.CourseMapper.selectByExample :159  [32m        [0;39m ==> Parameters: 5(Integer)
2020-11-29 10:48:38.872 TRACE c.sise.server.mapper.CourseMapper.selectByExample :165  [32m        [0;39m <==    Columns: id, name, summary, time, price, image, level, charge, status, enroll, sort, created_at, updated_at, teacher_id
2020-11-29 10:48:38.872 TRACE c.sise.server.mapper.CourseMapper.selectByExample :165  [32m        [0;39m <==        Row: 00000000, ÊµãËØïËØæÁ®ã01, ËøôÊòØ‰∏ÄÈó®ÊµãËØïËØæÁ®ã, 1500, 19.90, , 1, C, P, 100, 0, 2020-11-15 17:55:05.0, 2020-11-29 10:48:29.559, null
2020-11-29 10:48:38.872 TRACE c.sise.server.mapper.CourseMapper.selectByExample :165  [32m        [0;39m <==        Row: 00000001, ÊµãËØïËØæÁ®ã02, ËøôÊòØ‰∏ÄÈó®ÊµãËØïËØæÁ®ã, 10000, 0.00, null, 1, C, D, 0, 0, 2020-11-24 21:56:16.0, 2020-11-29 10:48:38.629, null
2020-11-29 10:48:38.873 DEBUG c.sise.server.mapper.CourseMapper.selectByExample :159  [32m        [0;39m <==      Total: 2
2020-11-29 10:49:02.904 DEBUG c.s.s.mapper.CourseCategoryMapper.selectByExample :159  [32m        [0;39m ==>  Preparing: select id, course_id, category_id from course_category WHERE ( course_id = ? ) 
2020-11-29 10:49:02.905 DEBUG c.s.s.mapper.CourseCategoryMapper.selectByExample :159  [32m        [0;39m ==> Parameters: 00000000(String)
2020-11-29 10:49:02.906 TRACE c.s.s.mapper.CourseCategoryMapper.selectByExample :165  [32m        [0;39m <==    Columns: id, course_id, category_id
2020-11-29 10:49:02.907 TRACE c.s.s.mapper.CourseCategoryMapper.selectByExample :165  [32m        [0;39m <==        Row: bUFSmIvY, 00000000, 00000104
2020-11-29 10:49:02.908 TRACE c.s.s.mapper.CourseCategoryMapper.selectByExample :165  [32m        [0;39m <==        Row: c0aWR5vP, 00000000, 00000107
2020-11-29 10:49:02.908 TRACE c.s.s.mapper.CourseCategoryMapper.selectByExample :165  [32m        [0;39m <==        Row: gHTAFQtW, 00000000, 00000102
2020-11-29 10:49:02.909 TRACE c.s.s.mapper.CourseCategoryMapper.selectByExample :165  [32m        [0;39m <==        Row: gpsA8LyD, 00000000, 00000106
2020-11-29 10:49:02.909 TRACE c.s.s.mapper.CourseCategoryMapper.selectByExample :165  [32m        [0;39m <==        Row: gRNI9nbz, 00000000, 00000108
2020-11-29 10:49:02.909 TRACE c.s.s.mapper.CourseCategoryMapper.selectByExample :165  [32m        [0;39m <==        Row: nE5GP4hY, 00000000, 00000101
2020-11-29 10:49:02.910 TRACE c.s.s.mapper.CourseCategoryMapper.selectByExample :165  [32m        [0;39m <==        Row: QC7NO4M4, 00000000, 00000105
2020-11-29 10:49:02.910 TRACE c.s.s.mapper.CourseCategoryMapper.selectByExample :165  [32m        [0;39m <==        Row: W9V9xs35, 00000000, 00000100
2020-11-29 10:49:02.911 TRACE c.s.s.mapper.CourseCategoryMapper.selectByExample :165  [32m        [0;39m <==        Row: xFLivFtC, 00000000, 00000103
2020-11-29 10:49:02.911 DEBUG c.s.s.mapper.CourseCategoryMapper.selectByExample :159  [32m        [0;39m <==      Total: 9
2020-11-29 10:51:06.762 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
2020-11-29 10:56:06.769 INFO  c.n.d.shared.resolver.aws.ConfigClusterResolver   :43   [32m        [0;39m Resolving eureka endpoints via configuration
