<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sise.server.mapper.ReplyMapper">
  <resultMap id="BaseResultMap" type="com.sise.server.domain.Reply">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="from" jdbcType="VARCHAR" property="from" />
    <result column="fromheadimg" jdbcType="VARCHAR" property="fromheadimg" />
    <result column="to" jdbcType="VARCHAR" property="to" />
    <result column="pid" jdbcType="CHAR" property="pid" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="time" jdbcType="VARCHAR" property="time" />
    <result column="commentnum" jdbcType="INTEGER" property="commentnum" />
    <result column="like" jdbcType="INTEGER" property="like" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `from`, fromheadimg, `to`, pid, `comment`, `time`, commentnum, `like`
  </sql>
  <select id="selectByExample" parameterType="com.sise.server.domain.ReplyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from reply
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from reply
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.sise.server.domain.ReplyExample">
    delete from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sise.server.domain.Reply">
    insert into reply (id, `from`, fromheadimg, 
      `to`, pid, `comment`, `time`, 
      commentnum, `like`)
    values (#{id,jdbcType=CHAR}, #{from,jdbcType=VARCHAR}, #{fromheadimg,jdbcType=VARCHAR}, 
      #{to,jdbcType=VARCHAR}, #{pid,jdbcType=CHAR}, #{comment,jdbcType=VARCHAR}, #{time,jdbcType=VARCHAR}, 
      #{commentnum,jdbcType=INTEGER}, #{like,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sise.server.domain.Reply">
    insert into reply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="from != null">
        `from`,
      </if>
      <if test="fromheadimg != null">
        fromheadimg,
      </if>
      <if test="to != null">
        `to`,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="comment != null">
        `comment`,
      </if>
      <if test="time != null">
        `time`,
      </if>
      <if test="commentnum != null">
        commentnum,
      </if>
      <if test="like != null">
        `like`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="from != null">
        #{from,jdbcType=VARCHAR},
      </if>
      <if test="fromheadimg != null">
        #{fromheadimg,jdbcType=VARCHAR},
      </if>
      <if test="to != null">
        #{to,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=CHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="commentnum != null">
        #{commentnum,jdbcType=INTEGER},
      </if>
      <if test="like != null">
        #{like,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sise.server.domain.ReplyExample" resultType="java.lang.Long">
    select count(*) from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update reply
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.from != null">
        `from` = #{record.from,jdbcType=VARCHAR},
      </if>
      <if test="record.fromheadimg != null">
        fromheadimg = #{record.fromheadimg,jdbcType=VARCHAR},
      </if>
      <if test="record.to != null">
        `to` = #{record.to,jdbcType=VARCHAR},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=CHAR},
      </if>
      <if test="record.comment != null">
        `comment` = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        `time` = #{record.time,jdbcType=VARCHAR},
      </if>
      <if test="record.commentnum != null">
        commentnum = #{record.commentnum,jdbcType=INTEGER},
      </if>
      <if test="record.like != null">
        `like` = #{record.like,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update reply
    set id = #{record.id,jdbcType=CHAR},
      `from` = #{record.from,jdbcType=VARCHAR},
      fromheadimg = #{record.fromheadimg,jdbcType=VARCHAR},
      `to` = #{record.to,jdbcType=VARCHAR},
      pid = #{record.pid,jdbcType=CHAR},
      `comment` = #{record.comment,jdbcType=VARCHAR},
      `time` = #{record.time,jdbcType=VARCHAR},
      commentnum = #{record.commentnum,jdbcType=INTEGER},
      `like` = #{record.like,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sise.server.domain.Reply">
    update reply
    <set>
      <if test="from != null">
        `from` = #{from,jdbcType=VARCHAR},
      </if>
      <if test="fromheadimg != null">
        fromheadimg = #{fromheadimg,jdbcType=VARCHAR},
      </if>
      <if test="to != null">
        `to` = #{to,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=CHAR},
      </if>
      <if test="comment != null">
        `comment` = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        `time` = #{time,jdbcType=VARCHAR},
      </if>
      <if test="commentnum != null">
        commentnum = #{commentnum,jdbcType=INTEGER},
      </if>
      <if test="like != null">
        `like` = #{like,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sise.server.domain.Reply">
    update reply
    set `from` = #{from,jdbcType=VARCHAR},
      fromheadimg = #{fromheadimg,jdbcType=VARCHAR},
      `to` = #{to,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=CHAR},
      `comment` = #{comment,jdbcType=VARCHAR},
      `time` = #{time,jdbcType=VARCHAR},
      commentnum = #{commentnum,jdbcType=INTEGER},
      `like` = #{like,jdbcType=INTEGER}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>